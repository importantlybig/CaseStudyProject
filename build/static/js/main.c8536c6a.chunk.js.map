{"version":3,"sources":["components/Note.js","components/ErrorModal.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDeleteNote","className","onClick","size","ErrorModal","props","onConfirm","titleModal","messageModal","AddNote","handleAddNote","useState","noteText","setNoteText","error","setError","Fragment","title","message","rows","cols","placeholder","value","onChange","event","target","length","trim","NotesList","notes","map","note","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","App","setNotes","searchText","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","nanoid","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8536c6a.chunk.js","sourcesContent":["import { MdDeleteForever } from 'react-icons/md';\n\nconst Note = ({ id, text, date, handleDeleteNote }) => {\n\treturn (\n\t\t<div className='note'>\n\t\t\t<span>{text}</span>\n\t\t\t<div className='note-footer'>\n\t\t\t\t<small>{date}</small>\n\t\t\t\t<MdDeleteForever\n\t\t\t\t\tonClick={() => handleDeleteNote(id)}\n\t\t\t\t\tclassName='delete-icon'\n\t\t\t\t\tsize='1.3em'\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Note;\n","import React from \"react\";\n\nconst ErrorModal = (props) => {\n  return (\n    <div>\n      <div className=\"backdrop\" onClick={props.onConfirm} />\n      <div className=\"modal\">\n        <header className=\"headerModal\">\n          <h2>{props.titleModal}</h2>\n        </header>\n        <div className=\"content\">\n          <p>{props.messageModal}</p>\n        </div>\n        <div className=\"action\">\n          <button onClick={props.onConfirm} className=\"buttons\">\n            Continue\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorModal;\n","import React, { useState } from \"react\";\nimport ErrorModal from \"./ErrorModal\";\n\nconst AddNote = ({ handleAddNote }) => {\n  const [noteText, setNoteText] = useState(\"\");\n  const [error, setError] = useState();\n  const characterLimit = 500;\n\n  const handleChange = (event) => {\n    if (characterLimit - event.target.value.length >= 0) {\n      setNoteText(event.target.value);\n    }\n  };\n\n  const handleSaveClick = () => {\n    if (noteText.trim().length === 0) {\n      setError({\n        title: \"Invalid Input\",\n        message: \"Please enter a valid note (non-empty values).\",\n      });\n      return;\n    }\n\n    if (noteText.trim().length > 0) {\n      handleAddNote(noteText);\n      setNoteText(\"\");\n    }\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <React.Fragment>\n      {error && (\n        <ErrorModal\n          titleModal={error.title}\n          messageModal={error.message}\n          onConfirm={errorHandler}\n        />\n      )}\n      <div className=\"note new\">\n        <textarea\n          rows=\"8\"\n          cols=\"10\"\n          placeholder=\"Type to add a note...\"\n          value={noteText}\n          onChange={handleChange}\n        ></textarea>\n        <div className=\"note-footer\">\n          <small>{characterLimit - noteText.length} Remaining</small>\n          <button className=\"save\" onClick={handleSaveClick}>\n            Add\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default AddNote;\n","import Note from \"./Note\";\nimport AddNote from \"./AddNote\";\nimport React from \"react\";\n\nconst NotesList = ({ notes, handleAddNote, handleDeleteNote }) => {\n  return (\n    <React.Fragment>\n      <AddNote handleAddNote={handleAddNote} />\n      <div className=\"notes-list\">\n        {notes.map((note) => (\n          <Note\n            id={note.id}\n            text={note.text}\n            date={note.date}\n            handleDeleteNote={handleDeleteNote}\n          />\n        ))}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default NotesList;\n","import React from \"react\";\nimport { MdSearch } from \"react-icons/md\";\n\nconst Search = ({ handleSearchNote }) => {\n  return (\n    <div className=\"search\">\n      <MdSearch className=\"search-icons\" size=\"1.3em\" />\n      <input\n        onChange={(event) => handleSearchNote(event.target.value)}\n        type=\"text\"\n        placeholder=\"Type to search...\"\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst Header = ({ handleToggleDarkMode }) => {\n  return (\n    <div className=\"header\">\n      <h1>Keeper</h1>\n      <button\n        onClick={() =>\n          handleToggleDarkMode((previousDarkMode) => !previousDarkMode)\n        }\n        className=\"save\"\n      >\n        Toggle Mode\n      </button>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([\n    // {\n    // \tid: nanoid(),\n    // \ttext: 'This is my first note!',\n    // \tdate: '15/04/2021',\n    // },\n    // {\n    // \tid: nanoid(),\n    // \ttext: 'This is my second note!',\n    // \tdate: '21/04/2021',\n    // },\n    // {\n    // \tid: nanoid(),\n    // \ttext: 'This is my third note!',\n    // \tdate: '28/04/2021',\n    // },\n    // {\n    // \tid: nanoid(),\n    // \ttext: 'This is my new note!',\n    // \tdate: '30/04/2021',\n    // },\n  ]);\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"react-notes-app-data\"));\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"react-notes-app-data\", JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  return (\n    <div className={`${darkMode && \"dark-mode\"}`}>\n      <Header handleToggleDarkMode={setDarkMode} />\n      <Search handleSearchNote={setSearchText} />\n      <div className=\"container\">\n        <NotesList\n          notes={notes.filter((note) =>\n            note.text.toLowerCase().includes(searchText)\n          )}\n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}